@model IceCreamProject.ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Secure.cshtml";
}

<style>
    .table {
        font-size: 0.95rem;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table th {
            text-transform: uppercase;
            font-weight: 700;
            letter-spacing: 0.05rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .badge {
        font-size: 0.85rem;
        padding: 0.4em 0.6em;
        border-radius: 0.5rem;
    }



    .order-details-row {
        transition: height 0.5s ease, opacity 0.5s ease;
    }

        .order-details-row.show {
            height: auto;
            opacity: 1;
        }

        .order-details-row.d-none {
            height: 0;
            opacity: 0;
        }

    .form-control {
        border: 0.5px solid #ccc; /* Thin, light border */
        border-radius: 5px; /* Rounded corners */
        padding: 10px;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

        .form-control:focus {
            border-color: #007bff; /* Highlight border on focus */
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25); /* Optional focus shadow */
            outline: none; /* Remove default outline */
        }

    .form-floating > .form-control {
        border-radius: 5px; /* Ensure consistency with floating labels */
    }
    .btn-primary {
        border: none; 
        border-radius: 5px; 

        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-primary:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional hover shadow */
        }
</style>

<section class="h-100 gradient-custom-2"
         style="background-image: url('@Url.Content("~/Frontend/images/Ice_Cream_banner_wallpaper.jpg")');
                background-size: cover;
                background-position: center;
                background-attachment: fixed;
                min-height: 100vh;">


    <!-- Success Toast Notification -->
    @if (TempData["Success"] != null)
    {
        <div class="toast-container position-fixed p-3" style="bottom: 1rem; right: 1rem; z-index:1050;" id="toast-container">
            <div class="toast align-items-center border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Notification</strong>
                    <small>Just now</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    @TempData["Success"]
                </div>
            </div>
        </div>
    }

    <!-- Error Toast Notification -->
    @if (TempData["Error"] != null)
    {
        <div class="toast-container position-fixed p-3" style="bottom: 1rem; right: 1rem; z-index:1050;" id="toast-container">
            <div class="toast align-items-center border-0 show bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-danger text-white">
                    <strong class="me-auto">Error</strong>
                    <small>Just now</small>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    @TempData["Error"]
                </div>
            </div>
        </div>
    }

    <div class="container py-5 h-100">
        <div class="mb-3">
            <a asp-route="Home" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Back
            </a>
        </div>

        <div class="row d-flex justify-content-center">
            <div class="col col-lg-9 col-xl-8 position-relative">
                <button id="btnTransactionHistory" class="btn btn-primary btn-sm position-absolute" style="top: 10px; right: 10px; z-index: 10;">
                    <i class="bi bi-clock-history"></i> Transaction History
                </button>

                <div id="profileSection" class="card">
                    <!-- Header Section -->
                    <div class="rounded-top text-white d-flex flex-row"
                         style="background-image: url('@Url.Content("~/Frontend/images/banner-2.jpg")');
                                background-size: cover;
                                background-position: center;
                                height: 200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="@Url.Content(Model.ProfileImageUrl)"
                                 alt="Profile Image"
                                 class="img-fluid img-thumbnail mt-4 mb-2"
                                 style="width: 150px; height: 150px; object-fit: cover; z-index: 1; border: 0.5px solid white;">
                        </div>

                        <div class="ms-3" style="margin-top: 130px;">
                            <h5 class="text-white">@Model.Email</h5>
                            <p>@Model.Address</p>
                        </div>
                    </div>

                    <!-- Main Content -->
                    <div class="card-body p-4 text-black">
                        <!-- Update Profile Form -->
                        <h4 class="mb-4">Update Profile</h4> 

                        <form asp-action="UpdateProfile" asp-controller="Home" method="post" enctype="multipart/form-data">
                            <div class="form-floating mb-3">
                                <input type="email" asp-for="Email" class="form-control" id="floatingEmail" placeholder="Email" readonly />
                                <label for="floatingEmail">Email</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Phone" class="form-control" id="floatingPhone" placeholder="Phone" />
                                <label for="floatingPhone">Phone</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Address" class="form-control" id="floatingAddress" placeholder="Address" />
                                <label for="floatingAddress">Address</label>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Profile Image</label>
                                <input type="file" asp-for="ProfileImage" class="form-control" />
                            </div>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </form>

                        <hr />
                        <!-- Change Password Form -->
                        <h4 class="mb-4">Change Password</h4>
                        <form asp-action="ChangePassword" asp-controller="Home" method="post">
                            <div class="form-floating mb-3">
                                <input type="password" name="currentPassword" class="form-control" id="floatingCurrentPassword" placeholder="Current Password" required />
                                <label for="floatingCurrentPassword">Current Password</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="password" name="newPassword" class="form-control" id="floatingNewPassword" placeholder="New Password"
                                       minlength="6"
                                       pattern="(?=.*[A-Z]).{6,}"
                                       title="Password must be at least 6 characters long and contain at least one uppercase letter."
                                       required />
                                <label for="floatingNewPassword">New Password</label>
                            </div>
                            <button type="submit" class="btn btn-primary">Change Password</button>
                        </form>
                    </div>
                </div>
                <div id="transactionHistorySection" class="card d-none">
                    <div class="card-body p-0">
                        <div class="rounded-top text-white d-flex align-items-center justify-content-center"
                             style="background-image: url('@Url.Content("~/Frontend/images/banner-2.jpg")');
                                background-size: cover;
                                background-position: center;
                                height: 200px;">
                            <h4 class="mb-0 text-white fw-bold">Transaction History</h4>
                        </div>
                        <div class="table-responsive table-scroll" style="position: relative; height: 700px;">
                            <table class="table table-hover table-striped align-middle shadow-sm border rounded">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">Order ID</th>
                                        <th scope="col">Date</th>
                                        <th scope="col">Total</th>
                                        <th scope="col">Status</th>
                                        <th scope="col">Payment Method</th>
                                        <th scope="col">Details</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model.TransactionHistory)
                                    {
                                        <tr>
                                            <td><span class="fw-bold">@order.OrderId</span></td>
                                            <td>@order.OrderDate.ToShortDateString()</td>
                                            <td>$@order.TotalAmount.ToString("F2")</td>
                                            <td>
                                                <span class="badge
                                                  @if (order.OrderStatus == "Completed") {
                                                                                            <text>bg-success</text>
                                                 }
                                                                            else if (order.OrderStatus == "Pending") {
                                                                                            <text>bg-warning text-dark</text>
                                                 }
                                                                            else {
                                                                                            <text>bg-danger</text>
                                                 }">
                                                                                                    @order.OrderStatus
                                                                            </span>
                                            </td>
                                            <td>@order.PaymentMethod</td>
                                            <td>
                                                <a href="javascript:void(0)" class="text-primary toggle-details" data-order-id="@order.OrderId">
                                                    View Details
                                                </a>
                                            </td>
                                        </tr>
                                        <!-- Hidden row for order details -->
                                        <tr class="order-details-row d-none" id="details-@order.OrderId">
                                            <td colspan="6">
                                                <div class="p-3 bg-light rounded shadow-sm">
                                                    <div class="order-details-content">
                                                        <p class="text-muted text-center mb-0">Loading details...</p>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        @*                     <div class="text-center py-3">
                            <button id="btnBackToProfile" class="btn btn-secondary">Back to Profile</button>
                        </div> *@

                    </div>
                </div>

            </div>
        </div>
    </div>
    <script>
        const btnToggle = document.getElementById('btnTransactionHistory');

        btnToggle.addEventListener('click', function () {
            const profileSection = document.getElementById('profileSection');
            const transactionHistorySection = document.getElementById('transactionHistorySection');

            if (profileSection.classList.contains('d-none')) {
                // Profile
                profileSection.classList.remove('d-none');
                transactionHistorySection.classList.add('d-none');
                btnToggle.innerHTML = '<i class="bi bi-clock-history"></i> Transaction History'; 
            } else {
                // transactionHistory

                profileSection.classList.add('d-none');
                transactionHistorySection.classList.remove('d-none');
                btnToggle.innerHTML = '<i class="bi bi-person"></i> Profile';
            }
        });
    </script>
    <script>
        const btnBackToProfile = document.getElementById('btnBackToProfile');

        btnBackToProfile.addEventListener('click', function () {
            const profileSection = document.getElementById('profileSection');
            const transactionHistorySection = document.getElementById('transactionHistorySection');

            profileSection.classList.remove('d-none');
            transactionHistorySection.classList.add('d-none');

        });
    </script>
    <script>
        document.querySelectorAll('.toggle-details').forEach(button => {
            button.addEventListener('click', function () {
                const orderId = this.getAttribute('data-order-id');
                const detailsRow = document.getElementById(`details-${orderId}`);

                if (detailsRow.classList.contains('d-none')) {
                    // Show the details
                    detailsRow.classList.remove('d-none');
                    detailsRow.classList.add('show', 'fade-in'); // Add fade-in animation
                    this.innerText = "Hide";

                    fetch(`/order-detail?orderId=${orderId}`)
                        .then(response => response.json())
                        .then(data => {
                            console.log("API Response:", data);

                            const detailsContent = detailsRow.querySelector('.order-details-content');
                            if (data.success) {
                                if (data.isMembership) {
                                    const membership = data.membershipDetails;

                                    console.log("Membership Details:", membership);

                                    let html = `
                                        <div class="card shadow-sm p-4 mb-3 border-0 rounded">
                                            <h5 class="text-primary fw-bold mb-3">Membership Details</h5>
                                            <table class="table table-borderless mb-0">
                                                <tr>
                                                    <th class="text-muted">Name</th>
                                                    <td>${membership.membershipName || "N/A"}</td>
                                                </tr>
                                                <tr>
                                                    <th class="text-muted">Price</th>
                                                    <td>$${membership.price ? membership.price.toFixed(2) : "N/A"}</td>
                                                </tr>
                                                <tr>
                                                    <th class="text-muted">Purchase Date</th>
                                                    <td>${membership.purchaseDate || "N/A"}</td>
                                                </tr>
                                                <tr>
                                                    <th class="text-muted">Expiry Date</th>
                                                    <td>${membership.expiryDate || "N/A"}</td>
                                                </tr>
                                                <tr>
                                                    <th class="text-muted">Status</th>
                                                    <td>
                                                        <span class="badge ${membership.status === "Active" ? "bg-success" : "bg-danger"}">
                                                            ${membership.status || "N/A"}
                                                        </span>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    `;
                                    detailsContent.innerHTML = html;
                                } else {
                                    let html = `
                                        <div class="card shadow-sm p-4 mb-3 border-0 rounded">
                                            <h5 class="text-primary fw-bold mb-3">Cart Items</h5>
                                            <table class="table table-striped table-hover mb-0">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th scope="col">Product Name</th>
                                                        <th scope="col">Quantity</th>
                                                        <th scope="col">Price</th>
                                                        <th scope="col">Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                    `;
                                    data.cartItems.forEach(item => {
                                        html += `
                                            <tr>
                                                <td>${item.name}</td>
                                                <td>${item.quantity}</td>
                                                <td>$${item.price.toFixed(2)}</td>
                                                <td>$${(item.quantity * item.price).toFixed(2)}</td>
                                            </tr>
                                        `;
                                    });
                                    html += `
                                                </tbody>
                                            </table>
                                        </div>
                                    `;
                                    detailsContent.innerHTML = html;
                                }
                            } else {
                                detailsContent.innerHTML = `
                                    <div class="alert alert-danger" role="alert">
                                        Error loading details: ${data.message}
                                    </div>
                                `;
                            }
                        })
                        .catch(error => {
                            console.error("Error fetching order details:", error);
                            const detailsContent = detailsRow.querySelector('.order-details-content');
                            detailsContent.innerHTML = `
                                <div class="alert alert-warning" role="alert">
                                    Error fetching details: ${error.message}
                                </div>
                            `;
                        });

                } else {
                    // Hide the details with fade-out animation
                    detailsRow.classList.add('fade-out');
                    setTimeout(() => {
                        detailsRow.classList.remove('show', 'fade-out');
                        detailsRow.classList.add('d-none');
                    }, 300); // Match the animation duration
                    this.innerText = "View";
                }
            });
        });

    </script>

</section>
