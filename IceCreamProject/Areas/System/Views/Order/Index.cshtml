@model IEnumerable<IceCreamProject.Models.Order>

@{
    ViewData["Title"] = "Order List";
    Layout = "~/Areas/System/Views/backend.cshtml";
}
<link href="~/Backend/css/order.css" rel="stylesheet" />
<div class="content">
    <div class="container">
        <div class="page-title">
            <h3>Order List</h3>
        </div>

        @if (TempData["Message"] != null)
        {
            <script>
                document.addEventListener('DOMContentLoaded', () => {
                    // Initialize Notyf
                    const notyf = new Notyf({
                        duration: 3000, // Notification duration in milliseconds
                        position: { x: 'right', y: 'bottom' }, // Position of the notification
                    });

                    // Trigger the Notyf success notification
                    notyf.success('@TempData["Message"]');
                });
            </script>
        }

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="m-0">Orders</h5>
                        <a asp-action="Create" class="btn btn-sm btn-outline-success">Create Order</a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover align-middle" id="dataTables-example">
                                <thead class="table-light">
                                    <tr>
                                        <th>Order ID</th>
                                        <th>Customer Name</th>
                                        <th>Order Date</th>
                                        <th>Address</th>
                                        <th>Payment Method</th>
                                        <th>Status</th>
                                        <th>Total Amount</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model)
                                    {
                                        <tr>
                                            <td>@order.OrderId</td>
                                            <td>@order.CustomerName</td>
                                            <td>@order.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>@order.Address</td>
                                            <td>@order.PaymentMethod</td>
                                            <td>
                                                <span class="badge @GetOrderStatusClass(order.OrderStatus)">
                                                    @order.OrderStatus
                                                </span>
                                            </td>
                                            <td>@order.TotalAmount.ToString("C")</td>
                                            <td>
                                                <a asp-controller="Order" asp-action="Details" asp-route-id="@order.OrderId" class="btn btn-sm btn-outline-info">Details</a>
                                                <a asp-controller="Order" asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-sm btn-outline-primary">Edit</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Utility Method for Status Badge -->
@functions {
    public string GetOrderStatusClass(string status)
    {
        return status switch
        {
            "Completed" => "badge-success",
            "Pending" => "badge-warning",
            "Cancelled" => "badge-danger",
            _ => "badge-secondary"
        };
    }
}
