@model IceCreamProject.Models.Feedback

@{
    ViewData["Title"] = "Reply to Feedback";
    Layout = "~/Areas/System/Views/backend.cshtml";
}
<div class="content">
    <div class="container">
        <div class="page-title">
            <h3>Reply to Feedback</h3>
        </div>
        <form id="ReplyFeedbackForm" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.FeedbackId" />
            <div class="card">
                <div class="card-header bg-primary text-white">
                    Feedback Details
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <p><strong>Name:</strong> @Model.Name</p>
                        <p><strong>Email:</strong> @Model.Email</p>
                        <p><strong>Content:</strong> @Model.Content</p>
                    </div>
                    <div class="form-group">
                        <label for="responseContent" class="form-label">Your Response</label>
                        <textarea id="responseContent" name="responseContent" class="form-control" rows="5" placeholder="Enter your response here..." required></textarea>
                    </div>
                </div>
                <div class="card-footer text-end">
                    <button type="button" class="btn btn-success" id="submitBtn">Send Response</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Notification Popup -->
<div id="notificationPopup" class="popup hidden">
    <div class="popup-content">
        <span id="notificationMessage"></span>
        <button id="closePopup" class="btn btn-primary">Close</button>
    </div>
</div>

<!-- Styles for Popup -->
<style>
    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.3s;
    }

        .popup.hidden {
            visibility: hidden;
            opacity: 0;
        }

    .popup-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
    }

        .popup-content .text-success {
            color: green;
        }

        .popup-content .text-danger {
            color: red;
        }
</style>

<!-- Script for AJAX and Popup -->
<script>
    const baseUrl = '/System/Feedback';

    document.getElementById('submitBtn').addEventListener('click', function () {
        const submitBtn = this; // Lấy nút hiện tại
        submitBtn.disabled = true; // Vô hiệu hóa nút

        const form = document.getElementById('ReplyFeedbackForm');
        const formData = new FormData(form);

        fetch(`${baseUrl}/Reply`, {
            method: 'POST',
            headers: {
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                const popup = document.getElementById('notificationPopup');
                const message = document.getElementById('notificationMessage');

                if (data.success) {
                    message.textContent = "Feedback replied successfully!";
                    message.className = 'text-success';
                    setTimeout(() => {
                        window.location.href = `${baseUrl}`;
                    }, 2000); // Điều hướng về trang Index sau 2 giây
                } else {
                    message.textContent = data.message || "Failed to reply to feedback.";
                    message.className = 'text-danger';
                }

                popup.classList.remove('hidden');
            })
            .catch(() => {
                const popup = document.getElementById('notificationPopup');
                const message = document.getElementById('notificationMessage');

                message.textContent = "An error occurred. Please try again.";
                message.className = 'text-danger';

                popup.classList.remove('hidden');
            })
            .finally(() => {
                // Bật lại nút sau 3 giây
                setTimeout(() => {
                    submitBtn.disabled = false;
                }, 3000);
            });
    });

    document.getElementById('closePopup').addEventListener('click', function () {
        const popup = document.getElementById('notificationPopup');
        popup.classList.add('hidden');
    });
</script>
